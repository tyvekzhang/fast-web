{{ license }}
"""{{ CN }} data model"""

from __future__ import annotations

from datetime import datetime
from typing import Optional
from sqlmodel import (
    SQLModel,
    Field,
    Column,
    DateTime,
{%- if index_metadata %}
    Index,
    UniqueConstraint,
{%- endif %}
    BigInteger,
{%- for sql_model_type in import_list %}
    {{ sql_model_type }},
{%- endfor %}
)

from src.main.app.core.utils.snowflake_util import snowflake_id


class {{ CN }}Base(SQLModel):
    {% for context in fields %}
    {%-  if context.field.primary_key == 1 %}
    {{ context.field.field_name }}: int = Field(
        default_factory=snowflake_id,
        primary_key=True,
        nullable=False,
        sa_type=BigInteger,
        {%- if context.field.comment %}sa_column_kwargs={"comment": "{{ context.field.comment }}"}{% endif %}
    )
    {%- elif context.field.field_name == "create_time" or context.field.field_name == "create_at" %}
    {{ context.field.field_name }}: Optional[datetime] = Field(
        sa_type=DateTime,
        default_factory=datetime.utcnow,
        {%- if context.field.comment %}sa_column_kwargs={"comment": "{{ context.field.comment }}"}{% endif %}
    )
    {%- elif context.field.field_name == "update_time" or context.field.field_name == "update_at" %}
    {{ context.field.field_name }}: Optional[datetime] = Field(
        sa_type=DateTime,
        default_factory=datetime.utcnow,
        sa_column_kwargs={
            "onupdate": datetime.utcnow,
            {%- if context.field.comment %}"comment": "{{ context.field.comment }}",{% endif %}
        },
    )
    {%- else %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}]{% else %}{{ context.field.field_type }}{% endif %} = Field(
        sa_column=Column(
            {{ context.field.sql_model_type }}{% if context.field.length %}({{ context.field.length }}){% elif context.field.scale %}({{ context.field.length }}, {{ context.field.scale }}){% endif %},
            {% if context.field.nullable %}nullable=True{% else %}nullable=False{% endif %},
            {% if context.field.default is not none and context.field.default != ""%}default={{ context.field.default }},{% endif %}
            {%- if context.field.comment %}comment="{{ context.field.comment }}"{% endif %}
        )
    )
    {%- endif %}
    {%- endfor %}


class {{ CN }}Model({{ CN }}Base, table=True):
    __tablename__ = "{{ table_name }}"
    __table_args__ = (
        {%- if index_metadata %}
        {%- for index in index_metadata %}
        {%- if index.type == "unique" %}
        UniqueConstraint({{ index.field  }}, name="{{ index.name }}"),
        {%- elif index.type == "primary" %}
        PrimaryKeyConstraint({{ index.field  }}, name="{{ index.name }}"),
        {%- else %}
        Index("{{ index.name }}", {{ index.field  }}),
        {%- endif %}
        {%- endfor %}
        {%- endif %}
        {%- if comment %}
        {"comment": "{{ comment }}"},
        {%- endif %}
    )
