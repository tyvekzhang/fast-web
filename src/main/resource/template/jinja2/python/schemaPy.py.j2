{{ license }}
"""{{ CN }} schema"""

from __future__ import annotations

from datetime import datetime
from typing import Optional
from fastapi import UploadFile
from pydantic import BaseModel, Field

from src.main.app.core.schema import PaginationRequest


class List{{ CNs }}Request(PaginationRequest):
    {%- for context in fields %}
    {%- if context.field.queryable == 1  %}
    {{ context.field.field_name }}: Optional[{{ context.field.field_type }}] = None
    {%- endif %}
    {%- endfor %}


class {{ CN }}(BaseModel):
    {%- for context in fields %}
    {%- if context.field.listable == 1  %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}] = {{ context.field.default }}{% else %}{{ context.field.field_type }}{% endif %}
    {%- endif %}
    {%- endfor %}


class {{ CN }}Detail(BaseModel):
    {%- for context in fields %}
    {%- if context.field.detailable == 1  %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}] = {{ context.field.default }}{% else %}{{ context.field.field_type }}{% endif %}
    {%- endif %}
    {%- endfor %}


class Create{{ CN }}(BaseModel):
    {%- for context in fields %}
    {%- if context.field.creatable == 1  %}
    {%- if context.field.html_type == "checkbox" %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[List[{{ context.field.field_type }}]] = {{ context.field.default }}{% else %}List[{{ context.field.field_type }}]{% endif %}
    {%- else %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}] = {{ context.field.default }}{% else %}{{ context.field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class Create{{ CN }}Request(BaseModel):
    {{ c_n }}: Create{{ CN }} = Field(alias="{{ cN }}")


class Update{{ CN }}(BaseModel):
    {%- for context in fields %}
    {%- if context.field.updatable == 1  %}
    {%- if context.field.html_type == "checkbox" %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[List[{{ context.field.field_type }}]] = {{ context.field.default }}{% else %}List[{{ context.field.field_type }}]{% endif %}
    {%- else %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}] = {{ context.field.default }}{% else %}{{ context.field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class Update{{ CN }}Request(BaseModel):
    {{ c_n }}: Update{{ CN }} = Field(alias="{{ cN }}")


class BatchGet{{ CNs }}Response(BaseModel):
    {{ c_ns }}: list[{{ CN }}Detail] = Field(default_factory=list, alias="{{ cNs }}")


class BatchCreate{{ CNs }}Request(BaseModel):
    {{ c_ns }}: list[Create{{ CN }}] = Field(default_factory=list, alias="{{ cNs }}")


class BatchCreate{{ CNs }}Response(BaseModel):
    {{ c_ns }}: list[{{ CN }}] = Field(default_factory=list, alias="{{ cNs }}")


class BatchUpdate{{ CN }}(BaseModel):
    {%- for context in fields %}
    {%- if context.field.batch_updatable == 1  %}
    {%- if context.field.html_type == "checkbox" %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[List[{{ context.field.field_type }}]] = {{ context.field.default }}{% else %}List[{{ context.field.field_type }}]{% endif %}
    {%- else %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}] = {{ context.field.default }}{% else %}{{ context.field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class BatchUpdate{{ CNs }}Request(BaseModel):
    {{ pks }}: list[int]
    {{ c_n }}: BatchUpdate{{ CN }} = Field(alias="{{ cN }}")


class BatchPatch{{ CNs }}Request(BaseModel):
    {{ c_ns }}: list[Update{{ CN }}] = Field(default_factory=list, alias="{{ cNs }}")


class BatchUpdate{{ CNs }}Response(BaseModel):
     {{ c_ns }}: list[{{ CN }}] = Field(default_factory=list, alias="{{ cNs }}")


class BatchDelete{{ CNs }}Request(BaseModel):
    {{ pks }}: list[int]


class Export{{ CN }}({{ CN }}):
    {%- for context in fields %}
    {%- if context.field.exportable == 1  %}
    {%- if context.field.html_type == "checkbox" %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[List[{{ context.field.field_type }}]] = {{ context.field.default }}{% else %}List[{{ context.field.field_type }}]{% endif %}
    {%- else %}
    {{ context.field.field_name }}: {% if context.field.nullable %}Optional[{{ context.field.field_type }}] = {{ context.field.default }}{% else %}{{ context.field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}
    pass


class Export{{ CNs }}Request(BaseModel):
    {{ pks }}: list[int]


class Import{{ CNs }}Request(BaseModel):
    file: UploadFile


class Import{{ CN }}(Create{{ CN }}):
    err_msg: Optional[str] = Field(None, alias="errMsg")


class Import{{ CNs }}Response(BaseModel):
    {{ c_ns }}: list[Import{{ CN }}] = Field(default_factory=list, alias="{{ cNs }}")
