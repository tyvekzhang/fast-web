{{ license }}
"""{{ CN }} schema"""

from fastapi import UploadFile
from typing import Optional, List
from pydantic import BaseModel, Field
from src.main.app.core.schema import PaginationRequest


class List{{ CNs }}Request(PaginationRequest):
    {%- for field in fields %}
    {%- if field.gen_field.queryable == 1  %}
    {{ field.gen_field.field_name }}: Optional[{{ field.gen_field.field_type }}] = None
    {%- endif %}
    {%- endfor %}


class {{ CN }}(BaseModel):
    {%- for field in fields %}
    {%- if field.gen_field.critical == 1  %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[{{ field.gen_field.field_type }}] = {{ field.gen_field.default }}{% else %}{{ field.gen_field.field_type }}{% endif %}
    {%- endif %}
    {%- endfor %}


class {{ CN }}Detail(BaseModel):
    {%- for field in fields %}
    {%- if field.gen_field.detailable == 1  %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[{{ field.gen_field.field_type }}] = {{ field.gen_field.default }}{% else %}{{ field.gen_field.field_type }}{% endif %}
    {%- endif %}
    {%- endfor %}


class {{ CN }}Create(BaseModel):
    {%- for field in fields %}
    {%- if field.gen_field.creatable == 1  %}
    {%- if field.gen_field.html_type == "checkbox" %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[List[{{ field.gen_field.field_type }}]] = {{ field.gen_field.default }}{% else %}List[{{ field.gen_field.field_type }}]{% endif %}
    {%- else %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[{{ field.gen_field.field_type }}] = {{ field.gen_field.default }}{% else %}{{ field.gen_field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class Create{{ CN }}Request(BaseModel):
    {{ c_n }}: Create{{ CN }}


class Update{{ CN }}(BaseModel):
    {%- for field in fields %}
    {%- if field.gen_field.updatable == 1  %}
    {%- if field.gen_field.html_type == "checkbox" %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[List[{{ field.gen_field.field_type }}]] = {{ field.gen_field.default }}{% else %}List[{{ field.gen_field.field_type }}]{% endif %}
    {%- else %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[{{ field.gen_field.field_type }}] = {{ field.gen_field.default }}{% else %}{{ field.gen_field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class Update{{ CN }}Request(BaseModel):
    {{ c_n }}: Update{{ CN }}


class BatchGet{{ CNs }}Response(BaseModel):
    {{ c_ns }}: list[{{ CN }}Detail]


class BatchCreate{{ CNs }}Request(BaseModel):
    {{ c_ns }}: list[Create{ CN }}]


class BatchCreate{{ CNs }}Response(BaseModel):
    {{ c_ns }}: list[{{ CN }}]


class BatchUpdate{{ CNs }}(BaseModel):
    {{ pks }}: List[int]
    {%- for field in fields %}
    {%- if field.gen_field.batch_updatable == 1  %}
    {%- if field.gen_field.html_type == "checkbox" %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[List[{{ field.gen_field.field_type }}]] = {{ field.gen_field.default }}{% else %}List[{{ field.gen_field.field_type }}]{% endif %}
    {%- else %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[{{ field.gen_field.field_type }}] = {{ field.gen_field.default }}{% else %}{{ field.gen_field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class BatchUpdate{{ CNs }}Request(BaseModel):
    {{ pks }}: list[int]
    {{ c_n }}: BatchUpdate{{ CN }}


class BatchPatch{{ CNs }}Request(BaseModel):
    {{ c_ns }}: list[Update{{ CN }}]


class BatchUpdate{{ CNs }}Response(BaseModel):
     {{ c_ns }}: list[{{ CN }}]


class BatchDelete{{ CNs }}Request(BaseModel):
    {{ pks }}: list[int]


class Export{{ CN }}({{ CN }}):
    {%- for field in fields %}
    {%- if field.gen_field.exportable == 1  %}
    {%- if field.gen_field.html_type == "checkbox" %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[List[{{ field.gen_field.field_type }}]] = {{ field.gen_field.default }}{% else %}List[{{ field.gen_field.field_type }}]{% endif %}
    {%- else %}
    {{ field.gen_field.field_name }}: {% if field.gen_field.nullable %}Optional[{{ field.gen_field.field_type }}] = {{ field.gen_field.default }}{% else %}{{ field.gen_field.field_type }}{% endif %}
    {%- endif %}
    {%- endif %}
    {%- endfor %}


class Export{{ CNs }}Request(BaseModel):
    {{ pks }}: list[int]


class Import{{ CNs }}Request(BaseModel):
    file: UploadFile


class Import{{ CN }}(Create{{ CN }}):
    err_msg: Optional[str] = Field(None, alias="errMsg")


class Import{{ CNs }}Response(BaseModel):
    {{ c_ns }}: list[Import{{ CN }}]
